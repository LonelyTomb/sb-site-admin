options:
    docker: true
pipelines:
  branches:
    master:
      - step:
          name: Build and push docker image to ECR
          #python image with aws-cli installed
          image: tstrohmeier/awscli:3.8.3
          script:
            # aws login
            - eval $(aws ecr get-login --region ${AWS_DEFAULT_REGION} --no-include-email)
            # docker
            - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
            - docker build -t ${AWS_REGISTRY_URL}:$BUILD_ID .
            - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
            - docker tag ${AWS_REGISTRY_URL}:$BUILD_ID ${AWS_REGISTRY_URL}:$BUILD_ID
            - docker push ${AWS_REGISTRY_URL}:$BUILD_ID
      # - step:
      #     name: Deploy to ECS
      #     image: atlassian/default-image:2
      #     script:
      #       # Replace the docker image name in the task definition with the newly pushed image.
      #       - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
      #       - export IMAGE_NAME="${AWS_REGISTRY_URL}:$BUILD_ID"
      #       - envsubst < task-definition-template.json >  task-definition.json

      #       # Update the task definition.
      #       - pipe: atlassian/aws-ecs-deploy:1.0.0
      #         variables:
      #           AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #           AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      #           AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
      #           CLUSTER_NAME: 'landshares-api'
      #           SERVICE_NAME: 'cstv-api-svc'
      #           TASK_DEFINITION: 'task-definition.json'